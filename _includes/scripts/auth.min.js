const{createClient:createClient}=window.supabase,supabaseUrl="https://anahjzknhplcbhakwjdl.supabase.co",supabaseAnonKey="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFuYWhqemtuaHBsY2JoYWt3amRsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3Mjc3Mjg2ODYsImV4cCI6MjA0MzMwNDY4Nn0.67uic887BZfBkMv2VlrCYqxpvmjNFQK2SCVIsx1EY4o",supabase=createClient(supabaseUrl,supabaseAnonKey);async function loginUser(email,password=null){try{let result;if(result=password?await supabase.auth.signInWithPassword({email:email,password:password}):await supabase.auth.signInWithOtp({email:email}),result.error)throw result.error;const{session:session}=result.data;session?(localStorage.setItem("supabaseToken",session.access_token),console.log("Stored supabaseToken:",session.access_token),window.location.href="/voyage"):console.log("Waiting for magic link confirmation...")}catch(error){console.error("Login failed:",error),alert("Login failed: "+error.message)}}async function checkUser(){const{data:data,error:error}=await supabase.auth.getSession();if(!error&&data.session){const userInfo=data.user;return localStorage.setItem("userRole",userInfo.role||"Listener"),userInfo}window.location.href="/login"}async function logoutUser(){try{const{error:error}=await supabase.auth.signOut();if(error)throw error;localStorage.removeItem("supabaseToken"),localStorage.removeItem("userId"),localStorage.removeItem("userRole"),localStorage.removeItem("userEmail"),localStorage.removeItem("userName"),window.location.href="/login"}catch(error){console.error("Logout failed:",error)}}window.loginUser=loginUser,window.logoutUser=logoutUser,window.checkUser=checkUser;